{"name":"Live-charts","tagline":"Good looking, animated, easy to customize, MVVM .Net charts, WPF, WinForms under MIT Licence, written in C#, LiveCharts listens for any change in your data automatically and updates UI","body":"\r\n<p align=\"center\">\r\n  <img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/live.png\" />\r\n</p>\r\n\r\n<p align=\"center\">\r\n  <img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/LineChart.gif\" width=\"200\" />\r\n  <img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/BarChart.gif\" width=\"200\"/>\r\n  <img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/StackedBarChart.gif\" width=\"200\"/>\r\n  <img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/PieChart.gif\" width=\"200\"/>\r\n</p>\r\n\r\n[![GitHub license](https://img.shields.io/github/license/beto-rodriguez/Live-Charts.svg?style=flat-square)](https://github.com/beto-rodriguez/Live-Charts/blob/master/LICENSE.TXT)\r\n[![GitHub issues](https://img.shields.io/github/issues/beto-rodriguez/Live-Charts.svg?style=flat-square)](https://github.com/beto-rodriguez/Live-Charts/issues)\r\n[![NuGet](https://img.shields.io/nuget/dt/LiveCharts.svg?style=flat-square)](https://www.nuget.org/packages/LiveCharts/)\r\n[![Gitter](https://img.shields.io/gitter/room/beto-rodriguez/Live-Charts.svg?style=flat-square)](https://gitter.im/beto-rodriguez/Live-Charts?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n\r\n\r\nLive charts is an easy way to build poweful charts, all charts are animated, they update every time you change your data, it also has an awesome performance. \r\n\r\n - Good looking, animated and easy to customize charts, you can practically change all properties.\r\n - Autoupdate UI, you just create a SeriesCollection, then LiveCharts will handle everything.\r\n - MVVM Charting, Support for WPF Bindings.\r\n - Easy to maintain and create new charts, as you can see in the source code, some charts have almost no code.\r\n - Supports zooming and panning.\r\n - MIT License, permissive licensing.\r\n \r\nThis is the logic you use in every chart, there are just some litle properties or rules that change from each type of chart\r\n\r\n```c#\r\n//create a new SeriesCollection\r\nvar seriesCollection = new SeriesCollection();\r\n\r\n//create some LineSeries if ypu need so\r\nvar charlesSeries = new LineSeries\r\n{\r\n  Title = \"Charles\",\r\n  Values = new ChartValues<double> {10, 5, 7, 5, 7, 8}\r\n};\r\nvar jamesSeries = new LineSeries\r\n{\r\n  Title = \"James\",\r\n  Values = new ChartValues<double> { 5, 6, 9, 10, 11, 9 }\r\n};\r\n\r\n//add series to seriesCollection\r\nseriesCollection.Add(charlesSeries);\r\nseriesCollection.Add(jamesSeries);\r\n\r\n//now just assing this seriesCollectionto your chart\r\n//you can use wpf bindings if you need it\r\nmyChart.Series = seriesCollection\r\n\r\n//create some labels if necessary\r\nvar labels = new string[] {\"Jan\", \"Feb\" , \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Ago\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"};\r\nmyChart.AxixX.Labels = labels;\r\n```\r\n\r\n## Is live charts what you are looking for? see these interesting examples.\r\n\r\n* **[Live Data](https://github.com/beto-rodriguez/Live-Charts/wiki/91-Live-Data)**: a charts that adds new data each second, DateTime as X Axis.\r\n* **[Filter records from a data base](https://github.com/beto-rodriguez/Live-Charts/wiki/92-Filtered-Data)**: a chart that pulls data from a data base according to a simple user filter.\r\n* **[IObservableChartPoint](https://github.com/beto-rodriguez/Live-Charts/wiki/93-IObservableChartPoint)**: this chart uses a view model that implements `IObservableChartPoint`, this will update chart every time a desired property changes.\r\n* There are much more examples in this solution, go to examples folder up here ^^^\r\n* High performance charts are almost ready, current test can draw 3 million points in only 1 second\r\n\r\n# Installation\r\n\r\n**1**. Install package from [**Nuget**](https://www.nuget.org/packages/LiveCharts) `Install-Package LiveCharts`\r\n\r\n**2**. Add name space\r\n\r\nTo your `XAML` if using wpf\r\n```xml\r\nxmlns:lvc=\"clr-namespace:LiveCharts;assembly=LiveCharts\"\r\n```\r\nOr WinForms and WPF code behind\r\n```\r\nusing LiveCharts;\r\n```\r\n**3**. Thats it. You are ready.\r\n\r\n# How to Contribute\r\n\r\n* **Star** this repo\r\n* Try it\r\n* Report Issues and Improvements\r\n* Pull request are well received\r\n\r\n# Need examples?\r\n\r\nGo to examples folder up there ^^^ or even better clone this repo and see included examples.\r\n\r\n# More Images\r\n\r\n<p align=\"center\">\r\n<img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/Tooltip.gif\" />\r\n</p>\r\n<p align=\"center\">\r\n<img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/multiseries.png\" />\r\n</p>\r\n<p align=\"center\">\r\n<img src=\"https://dl.dropboxusercontent.com/u/40165535/LiveCharts/UiElements.png\" />\r\n</p>\r\n\r\n# Perfomance Test\r\n\r\n<p align=\"center\">\r\n<img src=\"https://dl.dropboxusercontent.com/u/40165535/livecharts%20perfomance.png\" />\r\n</p>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}